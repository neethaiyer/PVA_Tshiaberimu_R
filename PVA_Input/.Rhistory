salmon <- rgb(250, 128, 114, alpha=100, maxColorValue = 255) ## for WLG
azure4 <- rgb(131, 139, 139, alpha=100, maxColorValue = 255) ## for MTN
##par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
## demographic pyramid for MTN
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 0.7, cex.names = 0.6, ylab="Age", cex.lab=0.6, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 0.7, cex.names = 0.6, ylab="Age", cex.lab=0.6, font.lab=2, add=TRUE)
salmon <- rgb(250, 128, 114, alpha=100, maxColorValue = 255) ## for WLG
azure4 <- rgb(131, 139, 139, alpha=100, maxColorValue = 255) ## for MTN
##par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
## demographic pyramid for MTN
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 0.7, cex.names = 0.6, ylab="Age", cex.lab=0.6, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 0.7, cex.names = 0.6, ylab="Age", cex.lab=0.6, font.lab=2, add=TRUE)
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 1, cex.names = 0.6, ylab="Age", cex.lab=0.6, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 1, cex.names = 0.6, ylab="Age", cex.lab=0.6, font.lab=2, add=TRUE)
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 1, cex.names = 0.6, ylab="Age", cex.lab=0.8, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 1, cex.names = 0.6, ylab="Age", cex.lab=0.8, font.lab=2, add=TRUE)
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 1, cex.names = 0.8, ylab="Age", cex.lab=1, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 1, cex.names = 0.8, ylab="Age", cex.lab=1, font.lab=2, add=TRUE)
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2, add=TRUE
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2, add=TRUE)
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2, add=TRUE)
salmon <- rgb(250, 128, 114, alpha=100, maxColorValue = 255) ## for WLG
azure4 <- rgb(131, 139, 139, alpha=200, maxColorValue = 255) ## for MTN
##par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
## demographic pyramid for MTN
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2, add=TRUE)
salmon <- rgb(250, 128, 114, alpha=200, maxColorValue = 255) ## for WLG
azure4 <- rgb(131, 139, 139, alpha=200, maxColorValue = 255) ## for MTN
##par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
## demographic pyramid for MTN
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2, add=TRUE)
salmon <- rgb(250, 128, 114, alpha=150, maxColorValue = 255) ## for WLG
azure4 <- rgb(131, 139, 139, alpha=150, maxColorValue = 255) ## for MTN
##par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
## demographic pyramid for MTN
barplot(n_mtn_1, horiz=T, names.arg=paste0(0:(length(n_mtn_1)-1), "-", 1:length(n_mtn_1)), las=1, xlab="relative frequency", col=azure4, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2)
## demographic pyramid for WLG
barplot(n1, horiz=T, names.arg=paste0(0:(length(n1)-1), "-", 1:length(n1)), las=1, xlab="relative frequency", col=salmon, cex.axis = 1, cex.names = 0.7, ylab="Age", cex.lab=1, font.lab=2, add=TRUE)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col=salmon, cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1:2], type="x", bty="l", ylab="annual mortality", las=1, col=azure4, cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("coral", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col=salmon, cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1],n_mtn_1, bty="l", type="x", xlab="age", ylab="cumulative survival", las=1, col=azure4, cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("coral", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col=salmon, cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col=azure4, cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("coral", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col=salmon, cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col=azure4, cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("coral", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("coral", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("coral", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="coral", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("coral", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="coral", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("coral", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=20)
lines(dat1[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=20)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.8, text.font=2)
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.8, text.font=2)
## 2-pannel survival plot
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1:2], type="o", bty="l", ylab="annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
plot(dat[,1],n1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="age", ylab="cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", ylab="Annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1:2], type="o", bty="l", ylab="Annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
plot(dat[,1],n1, bty="l", type="o", xlab="Age", ylab="Cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="Age", ylab="Cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
plot(dat[,1:2], type="o", bty="l", ylab="Annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", xlab="Age", ylab="Annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1:2], type="o", bty="l", xlab="Age", ylab="Annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
plot(dat[,1],n1, bty="l", type="o", xlab="Age", ylab="Cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=16)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="Age", ylab="Cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.6, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", xlab="Age", ylab="Annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=1, font.lab=2, pch=16)
lines(dat1[,1:2], type="o", bty="l", xlab="Age", ylab="Annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=1, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
plot(dat[,1],n1, bty="l", type="o", xlab="Age", ylab="Cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=1, font.lab=2, pch=16)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="Age", ylab="Cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=1, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
par(mfrow=c(1,2), oma=c(0,0,0,0), mar=c(5,4,2,1))
plot(dat[,1:2], type="o", bty="l", xlab="Age", ylab="Annual mortality", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.8, font.lab=2, pch=16)
lines(dat1[,1:2], type="o", bty="l", xlab="Age", ylab="Annual mortality", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.8, font.lab=2, pch=4)
legend(0, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
plot(dat[,1],n1, bty="l", type="o", xlab="Age", ylab="Cumulative survival", las=1, col="salmon", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.8, font.lab=2, pch=16)
lines(dat1[,1],n_mtn_1, bty="l", type="o", xlab="Age", ylab="Cumulative survival", las=1, col="azure4", cex.lab=0.8, cex.axis=0.8, ylim=c(0,1), cex=.5, cex.lab=0.8, font.lab=2, pch=4)
legend(15, 1, legend=c("Western Gorillas", "Mountain Gorillas"),
col=c("salmon", "azure4"), lty=c(1,1), cex=0.6, text.font=2, pch=c(16,4))
pop_projection <- function(tfinal, LM=mat, No=No){
pop <- No
N <- NULL
N <- cbind(N,pop)
for (i in 1:tfinal){
pop <- mat%*%pop
N <- cbind(N,pop)
}
N
}
stoch_projection <- function(tfinal, LM=mat, No=No){
##stochastic model
N <- No
resS <- sum(N)
for (i in 1:tfinal){
N1 <- N
for (j in 1:length(N)){
N1[j] <- sum(rbinom(N, N, mat[j,]))
}
N <- N1
resS <- c(resS, sum(N1))
}
resS
}
time <- 0:50
nyears <- 50
## Scenario A: starting population as current Tshiaberimu status: 1 adult female (assuming juvenile is M) / age:19
No <- c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
N <- pop_projection(tfinal=nyears, No=No)
N <- No
N
resS <- sum(N)
resS
N <- No
N
Nfinal_LM
Nfinal_LM <- sum(N)
Nfinal_LM
Nf <- sum(N)
N1 <- N
N
length(N)
n1[1]
N1[1]
sum(rbinom(N, N, mat[j,]))
sum(rbinom(N, N, mat[1,]))
mat[1,]
sum(rbinom(N, N, mat[1,]))
sum(rbinom(N, N, mat[1,]))
rbinom(N, N, mat[2,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[2,])
rbinom(N, N, mat[2,])
rbinom(N, N, mat[2,])
rbinom(N, N, mat[2,])
rbinom(N, N, mat[2,])
rbinom(N, N, mat[2,])
length(N)
1:length(N)
rbinom(N, N, mat[44,])
rbinom(N, N, mat[44,])
rbinom(N, N, mat[44,])
rbinom(N, N, mat[44,])
rbinom(N, N, mat[44,])
rbinom(N, N, mat[44,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(N, N, mat[1,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[2,])
rbinom(n=N, size=N, prob=mat[1,])
rbinom(n=N, size=N, prob=mat[1,])
rbinom(n=N, size=N, prob=mat[1,])
rbinom(n=N, size=N, prob=mat[1,])
rbinom(n=N, size=N, prob=mat[1,])
rbinom(n=N, size=N, prob=mat[1,])
rbinom(n=N, size=N, prob=mat[1,])
plot(rbinom(n=N, size=N, prob=mat[1,]))
mat[j,]
mat[j,]
mat[1,]
mat[2,]
mat[3,]
setwd("/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/")
## If these directories do not exsit, run this:
dir.create("PVA_Output")
dir.create("PVA_Input")
dir.create("PVA_Output/Results")
dir.create("PVA_Output/LM_Projection")
dir.create("PVA_Output/IBM_Projection")
## Select the working directory for input files:
workingDir_Input <- "/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/PVA_Input/"
## Select the working directory for output files:
workingDir_Output <- "/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/PVA_Output/"
## DAMIEN !!!!! Your wd: ## Make sure to update as above!
## workingDir <- "~/Documents/git repositories/PVA_Tshiaberimu_R/"
## Source the functions used in simulations below:
source("1. Function Definitions.R")
####################################################################################
############################ READ LIFE HISTORY TABLE ###############################
####################################################################################
setwd(workingDir_Input)
## Your life history tables should have at least 3 columns: age, mortality rate, and fertility rate:
dat <- read.csv("Gorilla_LifeTables.csv")
dat$fertilityrate_2percent <- dat[,3]*.786
## fertility rates multiplied by factor less than 1 to get eigen values of 1.01 which corresponds to a 1% growth rate
dat$fertilityrate_1percent <- dat[,3]*.643
## fertility rates multiplied by factor less than 1 to get eigen values of 1.02 which corresponds to a 2% growth rate
##################################################################
############## Create an object that selects the LM ##############
##################################################################
selectLM <- read.csv("LeslieMatrix_WLG.csv")
ReintroScenario <- read.csv("ReintroductionScenarios_LM.csv") ## csv file with Reintroduction Scenarios for LM
## Leslie Matrix parameters:
mat <- as.matrix(selectLM) ## LM needs to be converted to matrix object!
library(demogR)
View(mat)
View(dat)
leslie.matrix(lx=diag(mat), mx=dat$fertilityrate_WLG)
LM <- leslie.matrix(lx=diag(mat), mx=dat$fertilityrate_WLG)
ea <- eigen.analysis(LM)
View(mat)
setwd("/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/")
## If these directories do not exsit, run this:
dir.create("PVA_Output")
dir.create("PVA_Input")
dir.create("PVA_Output/Results")
dir.create("PVA_Output/LM_Projection")
dir.create("PVA_Output/IBM_Projection")
## Select the working directory for input files:
workingDir_Input <- "/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/PVA_Input/"
## Select the working directory for output files:
workingDir_Output <- "/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/PVA_Output/"
## DAMIEN !!!!! Your wd: ## Make sure to update as above!
## workingDir <- "~/Documents/git repositories/PVA_Tshiaberimu_R/"
## Source the functions used in simulations below:
source("1. Function Definitions.R")
####################################################################################
############################ READ LIFE HISTORY TABLE ###############################
####################################################################################
setwd(workingDir_Input)
## Your life history tables should have at least 3 columns: age, mortality rate, and fertility rate:
dat <- read.csv("Gorilla_LifeTables.csv")
dat$fertilityrate_2percent <- dat[,3]*.786
## fertility rates multiplied by factor less than 1 to get eigen values of 1.01 which corresponds to a 1% growth rate
dat$fertilityrate_1percent <- dat[,3]*.643
## fertility rates multiplied by factor less than 1 to get eigen values of 1.02 which corresponds to a 2% growth rate
##################################################################
############## Create an object that selects the LM ##############
##################################################################
selectLM <- read.csv("LeslieMatrix_WLG.csv")
View(selectLM)
View(dat)
View(selectLM)
n <- rep(1, nrow(dat))
n[1] <- 1
for (i in 2:length(n)){
n[i] <- prod(1-dat[1:(i-1),2])
}
##make sure sum equals 1 to generate pyramid
n <- n/(sum(n))
##plot
barplot(n, horiz=T, names.arg=paste0(0:(length(n)-1), "-", 1:length(n)), las=1, xlab="relative frequency", col=colors()[88])
N <- n*150
##now let's multiply our Leslie matrix by N for 20 years
#Year 1:
mat%*%N##how many individuals are born?
res <- sum(N)
for (i in 1:20){
N <- mat%*%N
res <- c(res, sum(N))
}
plot(res, type="o", las=1, xlab="number of years", ylab="number of females", bty="l", col=2, lwd=2)
##Calculate growth rate using
##using simulation result
mean(res[-1]/res[-length(res)])
mat <- as.matrix(selectLM)
N <- n*150
##now let's multiply our Leslie matrix by N for 20 years
#Year 1:
mat%*%N##how many individuals are born?
res <- sum(N)
for (i in 1:20){
N <- mat%*%N
res <- c(res, sum(N))
}
plot(res, type="o", las=1, xlab="number of years", ylab="number of females", bty="l", col=2, lwd=2)
mean(res[-1]/res[-length(res)])## ~3% annual growth rate
nrow(dat)
selectLM <- read.csv("LeslieMatrix_MTN_3%.csv")
setwd("/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/")
## If these directories do not exsit, run this:
dir.create("PVA_Output")
dir.create("PVA_Input")
dir.create("PVA_Output/Results")
dir.create("PVA_Output/LM_Projection")
dir.create("PVA_Output/IBM_Projection")
## Select the working directory for input files:
workingDir_Input <- "/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/PVA_Input/"
## Select the working directory for output files:
workingDir_Output <- "/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/PVA_Output/"
## DAMIEN !!!!! Your wd: ## Make sure to update as above!
## workingDir <- "~/Documents/git repositories/PVA_Tshiaberimu_R/"
## Source the functions used in simulations below:
source("1. Function Definitions.R")
####################################################################################
############################ READ LIFE HISTORY TABLE ###############################
####################################################################################
setwd(workingDir_Input)
## Your life history tables should have at least 3 columns: age, mortality rate, and fertility rate:
dat <- read.csv("Gorilla_LifeTables.csv")
dat$fertilityrate_2percent <- dat[,3]*.786
## fertility rates multiplied by factor less than 1 to get eigen values of 1.01 which corresponds to a 1% growth rate
dat$fertilityrate_1percent <- dat[,3]*.643
## fertility rates multiplied by factor less than 1 to get eigen values of 1.02 which corresponds to a 2% growth rate
##################################################################
############## Create an object that selects the LM ##############
##################################################################
selectLM <- read.csv("LeslieMatrix_MTN_3%.csv")
## Leslie Matrix parameters:
mat <- as.matrix(selectLM) ## LM needs to be converted to matrix object!
n <- rep(1, nrow(dat))
n[1] <- 1
for (i in 2:length(n)){
n[i] <- prod(1-dat[1:(i-1),2])
}
##make sure sum equals 1 to generate pyramid
n <- n/(sum(n))
##plot
barplot(n, horiz=T, names.arg=paste0(0:(length(n)-1), "-", 1:length(n)), las=1, xlab="relative frequency", col=colors()[88])
N <- n*150
##now let's multiply our Leslie matrix by N for 20 years
#Year 1:
mat%*%N##how many individuals are born?
res <- sum(N)
for (i in 1:20){
N <- mat%*%N
res <- c(res, sum(N))
}
plot(res, type="o", las=1, xlab="number of years", ylab="number of females", bty="l", col=2, lwd=2)
mean(res[-1]/res[-length(res)])
setwd("/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/")
## If these directories do not exsit, run this:
dir.create("PVA_Output")
dir.create("PVA_Input")
dir.create("PVA_Output/Results")
dir.create("PVA_Output/LM_Projection")
dir.create("PVA_Output/IBM_Projection")
## Select the working directory for input files:
workingDir_Input <- "/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/PVA_Input/"
## Select the working directory for output files:
workingDir_Output <- "/Users/neethaiyer/Desktop/PVA_Tshiaberimu_R/PVA_Output/"
## DAMIEN !!!!! Your wd: ## Make sure to update as above!
## workingDir <- "~/Documents/git repositories/PVA_Tshiaberimu_R/"
## Source the functions used in simulations below:
source("1. Function Definitions.R")
####################################################################################
############################ READ LIFE HISTORY TABLE ###############################
####################################################################################
setwd(workingDir_Input)
## Your life history tables should have at least 3 columns: age, mortality rate, and fertility rate:
dat <- read.csv("Gorilla_LifeTables.csv")
dat$fertilityrate_2percent <- dat[,3]*.786
## fertility rates multiplied by factor less than 1 to get eigen values of 1.01 which corresponds to a 1% growth rate
dat$fertilityrate_1percent <- dat[,3]*.643
## fertility rates multiplied by factor less than 1 to get eigen values of 1.02 which corresponds to a 2% growth rate
##################################################################
############## Create an object that selects the LM ##############
##################################################################
selectLM <- read.csv("LeslieMatrix_WLG.csv")
## Leslie Matrix parameters:
mat <- as.matrix(selectLM) ## LM needs to be converted to matrix object!
View(dat)
n <- rep(1, nrow(dat))
n[1] <- 1
for (i in 2:length(n)){
n[i] <- prod(1-dat[1:(i-1),4])
} ## Make sure sum equals 1 to generate pyramid
n_wlg <- n/(sum(n))
## for the cumulative survival curve:
n_wlgCS <- n/n[1]
n_wlg
n<-n_wlg
n <- n/(sum(n))
##plot
barplot(n, horiz=T, names.arg=paste0(0:(length(n)-1), "-", 1:length(n)), las=1, xlab="relative frequency", col=colors()[88])
N <- n*150
##now let's multiply our Leslie matrix by N for 20 years
#Year 1:
mat%*%N##how many individuals are born?
res <- sum(N)
for (i in 1:20){
N <- mat%*%N
res <- c(res, sum(N))
}
plot(res, type="o", las=1, xlab="number of years", ylab="number of females", bty="l", col=2, lwd=2)
mean(res[-1]/res[-length(res)])
