temp8[1:(nyears+1),i] <- apply(stoch_projection(tfinal=nyears, LM=mat, No=No_8),2,sum)
}
prob_50years <- data.frame(scenario = as.factor(LETTERS[1:9]),
prob_150 =  NA,
prob_100 = NA,
prob_50 = NA,
prob_40 = NA,
prob_Extn = NA)
index <- 0
for(i in c("temp", "temp0", "temp2", "temp3", "temp4", "temp5", "temp6", "temp7", "temp8")){
index <- index+1
tempx <- get(i)
ext <- tempx[nrow(tempx),]==0
probExt <- mean(ext)
probNe_150 <- mean(tempx[nrow(tempx),]>=150)
probNe_100 <- mean(tempx[nrow(tempx),]>=100)
probNe_50 <- mean(tempx[nrow(tempx),]>=50)
probNe_40 <- mean(tempx[nrow(tempx),]>=40)
prob_50years[index,2:6] <- c(probNe_150, probNe_100, probNe_50, probNe_40, probExt)*100
}
## Make sure you use the correct LM for WLG or MTN when you run the code
## WLG values
#dir.create(paste0(workingDir,"pva_lambda_extn"))##run this line if pva_lambda_extn does not exist and needs to be created
write.csv(prob_50years, file=paste0(workingDir,"pva_lambda_extn/extn_lm_WLG.csv"), row.names=F)
## MTN values
write.csv(prob_50years, file=paste0(workingDir,"pva_lambda_extn/extn_lm_MTN.csv"), row.names=F)
prob_50years_wlg_lm <- read.csv(paste0(workingDir,"pva_lambda_extn/extn_lm_WLG.csv"))
prob_50years_mtn_lm <- read.csv(paste0(workingDir,"pva_lambda_extn/extn_lm_MTN.csv"))
################################################################################################
################################ Plots of extinction probability  ##############################
################################################################################################
plot.new()
par(mfrow=c(1,1), mar=c(5.1,4.1,4.1,5.1))
plot.window(xlim=c(1,9), ylim=c(0,100))
axis(1, 1:9, LETTERS[1:9])
axis(2)
axis(2, font.lab=2, at=seq(0, 100, by=10), labels=seq(0, 100, by=10))
title(xlab="Reintroduction Scenario", ylab="Probability of Extinction", font.lab=2)
lines(prob_50years_wlg_lm$scenario, prob_50years_wlg_lm$prob_Extn, bg="coral", type="b", pch=21)
lines(prob_50years_mtn_lm$scenario, prob_50years_mtn_lm$prob_Extn, bg="azure4", type="b", pch=24)
legend(1, 100, legend=c("Western Gorillas", "Mountain Gorillas"),
pt.bg=c("coral", "azure4"), lty=c(1,1), text.font=2, pch=c(21,24))
simObjects <- c("temp", "temp0", "temp2", "temp3", "temp4", "temp5", "temp6", "temp7", "temp8")
detObjects <- c("N_projected_det", "N_projected_det0", "N_projected_det2", "N_projected_det3", "N_projected_det4", "N_projected_det5", "N_projected_det6", "N_projected_det7", "N_projected_det8")
par(mfrow=c(3,3), oma=c(0,0,0,0), mar=c(5,4,2,1), las=1, bty="l")
maxY <- 120 ## max y-axis value
time <- 0:50 ## time interval for the plots
for(j in 1:9){
probExt <- prob_50years_wlg_lm[j,6]
#probExt <- prob_50years_mtn_lm[,6]##uncomment this line for mountain gorilla demographic parameter simulations
tempX <- get(simObjects[j])
N_projected_detX <- get(detObjects[j])
plot(N_projected_det~time, type="l", col=1, xlab="Years post-introduction", ylab="Population Size", ylim=c(0,maxY),lty=2, cex.lab=1, cex.axis=1, font.lab=2) ## plot of deterministic projection
for(i in 1:ncol(tempX)){
lines(time, tempX[,i], col=grey(.8, alpha=.05), lwd=3)
} ## plots projections from stochastic LM simulations
lines(apply(tempX, 1, mean)~time, type="l", col=2, lwd=4) ## plot mean projection from stochastic LM simulations
lines(N_projected_detX~time, type="l", col=1, lwd=2, lty=2) ## replot deterministic projection
title(main="A: No introduction, male juvenile", sub=paste0("Probability of extinction = ",probExt, "%"), cex.main=1, cex.sub=1, col.sub=1, font.sub=3)
qtiles <- apply(tempX, 1, function(v) quantile(v, probs=c(0.05, 0.95))) ## plot 95% confidence intervals for simulations
lines((0:(nrow(tempX)-1)), qtiles[1,], col=1, lty=2)
lines((0:(nrow(tempX)-1)), qtiles[2,], col=1, lty=2)
lines(x=c(-5:50), y=rep(50, 56), col="navyblue", lwd=2, lty=1) ## add a line for the 50 individual mark
}
## Set the working directory:
workingDir <- "~/Box Sync/PVA_Paper/PVA_Tshiaberimu_R/"
dat <- read.csv(paste0(workingDir, "Breuer_western gorilla life table.csv"))
mat_wlg <- matrix(0, nrow=nrow(dat), ncol=nrow(dat)) ## create square matrix with 0s everywhere
mat_wlg[1,] <- dat[,3] ## first row in matrix assigned the fertility rates from the life table
mat2 <- matrix(0,ncol=ncol(mat_wlg)-1, nrow=ncol(mat_wlg)-1)
diag(mat2) <- 1-dat[-nrow(dat),2] ## survival rates are assigned to just under the diagonal of a LM
mat_wlg[2:nrow(mat_wlg), 1:(ncol(mat_wlg)-1)] <- mat2
head(mat_wlg) ## View and check matrix
mat_mtn <- matrix(0, nrow=nrow(dat1), ncol=nrow(dat1)) ## create square matrix with 0s everywhere
mat_mtn[1,] <- dat1[,3] ## first row in matrix assigned the fertility rates from the life table
mat_mtn_2 <- matrix(0,ncol=ncol(mat_mtn)-1, nrow=ncol(mat_mtn)-1)
diag(mat_mtn_2) <- 1-dat1[-nrow(dat1),2] ## survival rates are assigned to just under the diagonal of a LM
mat_mtn[2:nrow(mat_mtn), 1:(ncol(mat_mtn)-1)] <- mat_mtn_2
head(mat_mtn) ## View and check matrix
## Data from Bronikowski et al (2016) for mountain gorillas (MTN)
## Note the first age of reproduction is 8 years although the first birth is usually at 10 years old for mountain gorillas and the fertility rate varied for each adult year.
dat1 <- read.csv(paste0(workingDir, "Bronikowski_Eastern female gorilla life table.csv"))
mat_wlg <- matrix(0, nrow=nrow(dat), ncol=nrow(dat)) ## create square matrix with 0s everywhere
mat_wlg[1,] <- dat[,3] ## first row in matrix assigned the fertility rates from the life table
mat2 <- matrix(0,ncol=ncol(mat_wlg)-1, nrow=ncol(mat_wlg)-1)
diag(mat2) <- 1-dat[-nrow(dat),2] ## survival rates are assigned to just under the diagonal of a LM
mat_wlg[2:nrow(mat_wlg), 1:(ncol(mat_wlg)-1)] <- mat2
head(mat_wlg) ## View and check matrix
n <- rep(1, nrow(dat))
n[1] <- 1
for (i in 2:length(n)){
n[i] <- prod(1-dat[1:(i-1),2])
}
## Make sure sum equals 1 to generate pyramid
n <- n/(sum(n))
## for the cumulative survival curve:
n1 <- n/n[1]
## Let's create a demographic pyramid for MTN
n_mtn <- rep(1, nrow(dat1))
n_mtn[1] <- 1
for (i in 2:length(n_mtn)){
n_mtn[i] <- prod(1-dat1[1:(i-1),2])
}
## Make sure sum equals 1 to generate pyramid
n_mtn <- n_mtn/(sum(n_mtn))
## for the cumulative survival curve:
n_mtn_1 <- n_mtn/n_mtn[1]
length(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0))
## Now, let's apply the functions using each reintrodcution scenario. Load the appropriate csv file.
ReintroScenario <- read.csv(paste0(workingDir, "ReintroductionScenarios.csv"))
mat <- mat_wlg ## make sure you choose either the WLG or MTN LM (mat or mat_mtn respectively)
#mat <- mat_wlg
pop_projection <- function(tfinal, LM=mat, No=No){
pop <- N <- No
for (i in 1:tfinal){
pop <- LM%*%pop
N <- cbind(N,pop)
}
N
}
## The function below returns the stochastic LM population size projection, using the projection period (tfinal), age and number of females in the starting population (No) and Leslie matrix (LM).
stoch_projection <- function(tfinal, LM=mat, No=No){
pop <- N <- No
for (i in 1:tfinal){
currentpop <- pop
for (j in 1:length(No)){
pop[j] <- sum(rbinom(n=length(No), size=currentpop, prob=LM[j,]))
}
N <- cbind(N, pop)
}
N
}
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ReintroScenario$No_A
No_B <- ReintroScenario$No_B
c(0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ReintroScenario$No_B
ReintroScenario$No_C
c(0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ReintroScenario$No_D
c(0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
c(0,0,0,0,0,0,0,2,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ReintroScenario$No_E
c(0,0,0,0,0,0,0,2,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ReintroScenario$No_F
ReintroScenario$No_G
c(0,0,0,0,0,0,0,2,1,1,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ReintroScenario$No_H
c(0,0,0,0,0,0,0,2,1,1,0,0,2,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
c(0,0,0,0,0,0,0,2,1,1,0,0,2,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
ReintroScenario$No_I
nyears <- 50 ## projection period
for(i in c("ReintroScenario$No_A", "ReintroScenario$No_B", "ReintroScenario$No_C", "ReintroScenario$No_D", "ReintroScenario$No_E", "ReintroScenario$No_F", "ReintroScenario$No_G", "ReintroScenario$No_H", "ReintroScenario$No_I")){
ReintroScenario$No_X <- get(i)
No_i <- get(i)
N_i <- get(i)
N_projected_detA <- get(i)
## Apply the deterministic projection to all scenarios
No_i <- ReintroScenario$No_i
N_i <- pop_projection(tfinal=nyears, LM=mat, No=No_i)
N_projected_deti <- apply(N_i,2,sum)
}
nyears <- 50 ## projection period
for(i in c("ReintroScenario$No_A", "ReintroScenario$No_B", "ReintroScenario$No_C", "ReintroScenario$No_D", "ReintroScenario$No_E", "ReintroScenario$No_F", "ReintroScenario$No_G", "ReintroScenario$No_H", "ReintroScenario$No_I")){
ReintroScenario$No_X <- get(i)
No_i <- get(i)
N_i <- get(i)
N_projected_deti <- get(i)
## Apply the deterministic projection to all scenarios
No_i <- ReintroScenario$No_i
N_i <- pop_projection(tfinal=nyears, LM=mat, No=No_i)
N_projected_deti <- apply(N_i,2,sum)
}
dat <- read.csv("/Users/neethaiyer/Box Sync/Courses_S19/ANT191_S19/Assignment1_ANT191_S19/Assignments_ANT191_S19/Assignment2_ANT191_S19/edge list.csv", header=TRUE) ## load the csv file
library(igraph)
mat <- as.matrix(dat) ## converts our dataframe into an matrix
g <- graph_from_edgelist(mat) ## now we can create a graph using the appropriate edge list
plot(g) ## great! so here's our network. let's work with the cosmetics.
plot(g)
g <- graph_from_edgelist(dat)
mat <- as.matrix(dat) ## converts our dataframe into an matrix
g <- graph_from_edgelist(mat) ## now we can create a graph using the appropriate edge list
plot(g) ## great! so here's our network. let's work with the cosmetics.
plot(g)
mat <- as.matrix(dat)
g <- graph_from_edgelist(mat)
View(mat)
g <- graph_from_edgelist(dat)
mat <- as.matrix(dat) ## converts our dataframe into an matrix
g <- graph_from_edgelist(mat) ## now we can create a graph using the appropriate edge list
plot(g) ## great! so here's our network. let's work with the cosmetics.
plot(g)
# Chunk 1
dat <- read.csv("/Users/neethaiyer/Box Sync/Courses_S19/ANT191_S19/Assignment1_ANT191_S19/Assignments_ANT191_S19/Assignment2_ANT191_S19/edge list.csv", header=TRUE) ## load the csv file
library(igraph)
mat <- as.matrix(dat) ## converts our dataframe into an matrix
g <- graph_from_edgelist(mat) ## now we can create a graph using the appropriate edge list
plot(g) ## great! so here's our network. let's work with the cosmetics.
plot(g)
# Chunk 2
g <- graph_from_edgelist(dat)
mat <- as.matrix(dat) ## converts our dataframe into an matrix
g <- graph_from_edgelist(mat) ## now we can create a graph using the appropriate edge list
plot(g) ## great! so here's our network. let's work with the cosmetics.
plot(g)
# Chunk 3
mat <- as.matrix(dat)
g <- graph_from_edgelist(mat)
# Chunk 4
plot(g)
# Chunk 5
plot(g,
edge.width = 2,
vertex.color = terrain.colors(10),
vertex.label.cex = 0.6,
vertex.size = 10,
edge.arrow.size = 0.5,
edge.arrow.width = 0.5,
main = c("Great work, Padawan R-tists!"),
sub = c("You now know how to make beautiful networks using R!"),
layout = layout_nicely(g)
)
# Chunk 6
V(g)$vertex_degree <- degree(g)
plot(g,
edge.width = 2,
vertex.color = terrain.colors(10),
vertex.label.cex = 0.6,
vertex.size = V(g)$vertex_degree,
edge.arrow.size = 0.5,
edge.arrow.width = 0.5,
main = c("Great work, Padawan R-tists!"),
sub = c("You now know how to make beautiful networks using R!"),
layout = layout_with_graphopt(g)
)
plot(g,
edge.width = 2, ## weight of edges
vertex.color = terrain.colors(10), ## node colors
vertex.label.cex = 0.6, ## font size of node labels
vertex.size = 10, ## size of nodes
edge.arrow.size = 0.5, ## size of arrows on directed network
edge.arrow.width = 0.5, ## width of arrows on directed network
main = c("Great work, Padawan R-tists!"), ## adds main title
sub = c("You now know how to make beautiful networks using R!"), ## adds subtitle
layout = layout_nicely(g) ## choose an appropriate layout
)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 0.1, fontsize = 2,
edge.color = "black", label.font.size = 2,
label.cex = 0.5, vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 0.1, fontsize = 2,
edge.color = "black", label.font.size = 2,
label.cex = 0.5, vertex.color = 1:8, edge.lty = 1, vertex.size = 2, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 0.1, fontsize = 2,
edge.color = "black", label.font.size = 2,
label.cex = 1, vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 0.1, fontsize = 2,
edge.color = "black", label.font.size = 2,
label.cex = 10, vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 0.1, fontsize = 2,
edge.color = "black", label.font.size = 10, vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 0.1, fontsize = 2,
edge.color = "black", label.font.size = 2, vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 0.1, fontsize = 2,
edge.color = "black", label.font.size = 5, vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 0.1, fontsize = 2,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 0.1, fontsize = 10,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "circle",
edge.arrow.size = 1,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "sphere",
edge.arrow.size = 1,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 1, vertex.shape = "square",
edge.arrow.size = 1,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 10, vertex.shape = "square",
edge.arrow.size = 1,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 1, arrow.width = 2, vertex.shape = "square",
edge.arrow.size = 1,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 10, arrow.width = 2, vertex.shape = "square",
edge.arrow.size = 1,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 1, arrow.size = 10, arrow.width = 0.1, vertex.shape = "square",
edge.arrow.size = 1,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
plot(g, edge.width = 10, vertex.shape = "square",
edge.arrow.size = 1,
edge.color = "red", vertex.color = 1:8, edge.lty = 1, vertex.size = 6, layout = layout_nicely)
el=as.matrix(dat)
el[,1]=as.character(el[,1])
el[,2]=as.character(el[,2])
g=graph.edgelist(el,directed=FALSE)
g=graph.data.frame(edge_list,directed=FALSE)
el=as.matrix(dat)
el[,1]=as.character(el[,1])
el[,2]=as.character(el[,2])
g=graph.edgelist(el,directed=FALSE)
plot(g)
plot(g, vertex.size=7, vertex.color="red", vertex.frame.color="blue", vertex.shape="sphere", vertex.label.cex=.5, vertex.label.color="black", edge.width=.1, edge.lty=4, edge.color="black", edge.label="Edge List", edge.curved=0)
plot(g, vertex.size=7, vertex.color="red", vertex.frame.color="blue", vertex.shape="sphere", vertex.label.cex=1, vertex.label.color="white", edge.width=.1, edge.lty=4, edge.color="black", edge.label="Edge List", edge.curved=0)
plot(g, vertex.size=7, vertex.color="red", vertex.frame.color="blue", vertex.shape="sphere", vertex.label.cex=1, vertex.label.color="white", edge.width=.8, edge.lty=4, edge.color="black", edge.label="Edge List", edge.curved=0)
plot(g, vertex.size=7, vertex.color="red", vertex.frame.color="blue", vertex.shape="sphere", vertex.label.cex=1, vertex.label.color="white", edge.width=.8, edge.lty=4, edge.color="black", edge.label="Edge List", edge.curved=1)
plot(g, vertex.size=7, vertex.color="red", vertex.frame.color="blue", vertex.shape="sphere", vertex.label.cex=1, vertex.label.color="white", edge.width=.1, edge.lty=4, edge.color="black", edge.label="Edge List", edge.curved=1)
plot(g, vertex.size=7, vertex.color="red", vertex.frame.color="blue", vertex.shape="sphere", vertex.label.cex=1, vertex.label.color="white", edge.width=.8, edge.lty=4, edge.color="black", edge.label="Edge List", edge.curved=1)
plot(g, vertex.size=7, vertex.color="red", vertex.frame.color="blue", vertex.shape="sphere", vertex.label.cex=1, vertex.label.color="white", edge.width=.8, edge.lty=4, edge.color="black")
plot(g)
plot(g, vertex.size=7)
plot(g, vertex.size=6)
plot(g, vertex.color= "darkorange1", vertex.lable.color= "darkblue", edge.width= .2, edge.lty=1, lable.font.size= 12,vertex.size=12, vertex.frame.color="black", edge.width= 4,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.lable.color= "darkblue", edge.width= .2, edge.lty=1, lable.font.size= 5,vertex.size=12, vertex.frame.color="black", edge.width= 4,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.lable.color= "darkblue", edge.width= .2, edge.lty=1, lable.font.size= 5,vertex.size=8, vertex.frame.color="black", edge.width= 4,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.lable.color= "darkblue", edge.width= .2, edge.lty=1, lable.font.size= 5,vertex.size=8, vertex.frame.color="blue", edge.width= 4,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.lable.color= "darkblue", edge.width= .2, edge.lty=1, lable.font.size= 5,vertex.size=8, vertex.frame.color="blue", edge.width= 10,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.lable.color= "darkblue", edge.width= .2, edge.lty=1, lable.font.size= 5,vertex.size=8, vertex.frame.color="blue", edge.width=20,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "darkblue", edge.width= .2, edge.lty=1, lable.font.size= 5,vertex.size=8, vertex.frame.color="blue", edge.width=20,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= .2, edge.lty=1, lable.font.size= 5,vertex.size=8, vertex.frame.color="blue", edge.width=20,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= .2, edge.lty=1, label.font.size= 5,vertex.size=8, vertex.frame.color="blue", edge.width=20,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= .2, edge.lty=1, label.font.size=10,vertex.size=8, vertex.frame.color="blue", edge.width=20,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= 20, edge.lty=1, label.font.size=10,vertex.size=8, vertex.frame.color="blue",layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= 2, edge.lty=1, label.font.size=10,vertex.size=8, vertex.frame.color="blue",layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= 2, edge.lty=1, label.font.size=10,vertex.size=10, vertex.frame.color="blue",layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= 2, edge.lty=1, label.font.size=10,vertex.size=20, vertex.frame.color="blue",layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= 2, edge.lty=1, label.font.size=10,vertex.size=20, vertex.frame.color="blue",layout=layout_with_dh, edge.arrow.size=0.8, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= 2, edge.lty=1, label.font.size=10,vertex.size=10, vertex.frame.color="blue",layout=layout_with_dh, edge.arrow.size=0.8, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.label.color= "white", edge.width= 2, edge.lty=1, label.font.size=10,vertex.size=10, vertex.frame.color="blue",layout=layout_with_dh, edge.arrow.size=2, edge.color="cornflowerblue")
plot(g, vertex.color= "darkorange1", vertex.lable.color= "darkblue", edge.width= .2, edge.lty=1, lable.font.size= 12,vertex.size=12, vertex.frame.color="black", edge.width= 4,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
knitr::opts_knit$set(root.dir = '/Users/neethaiyer/Box Sync/Courses_S19/ANT191_S19/Assignment1_ANT191_S19/Assignments_ANT191_S19/Assignment2_ANT191_S19' )
library(igraph)
dat <- read.csv("edge list.csv", header=TRUE) ## load the csv file
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.siz
e=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.siz
e=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g, vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.siz
e=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g, vertex.color="green",vertex.label.cex=0.5,vertex.label.color="black",vertex.siz
e=8,vertex.shape="sphere",edge.arrow.size=.5)
library(igraph)
dat <- read.csv("edge list.csv", header=TRUE) ## load the csv file
g <- graph_from_edgelist(dat)
knitr::opts_knit$set(root.dir = '/Users/neethaiyer/Box Sync/Courses_S19/ANT191_S19/Assignment1_ANT191_S19/Assignments_ANT191_S19/Assignment2_ANT191_S19' )
library(igraph)
dat <- read.csv("edge list.csv", header=TRUE) ## load the csv file
library(igraph)
## edge list.csv
dat <- read.csv("/Users/neethaiyer/Box Sync/Courses_S19/ANT191_S19/Assignment1_ANT191_S19/Assignments_ANT191_S19/Assignment2_ANT191_S19/edge list.csv", header=TRUE) ## load the csv file
g <- graph_from_edgelist(dat)
mat <- as.matrix(dat)
g <- graph_from_edgelist(mat)
plot(g)
plot(g,
edge.width = 2, ## weight of edges
vertex.color = terrain.colors(10), ## node colors
vertex.label.cex = 0.6, ## font size of node labels
vertex.size = 10, ## size of nodes
edge.arrow.size = 0.5, ## size of arrows on directed network
edge.arrow.width = 0.5, ## width of arrows on directed network
main = c("Great work, Padawan R-tists!"), ## adds main title
sub = c("You now know how to make beautiful networks using R!"), ## adds subtitle
layout = layout_nicely(g) ## choose an appropriate layout
)
V(g)$vertex_degree <- degree(g) ## calculates the degree centrality of all nodes in the network and saves these values as an attribute of each vertex in our network.
plot(g,
edge.width = 2,
vertex.color = terrain.colors(10),
vertex.label.cex = 0.6,
vertex.size = V(g)$vertex_degree,
edge.arrow.size = 0.5,
edge.arrow.width = 0.5,
main = c("Great work, Padawan R-tists!"),
sub = c("You now know how to make beautiful networks using R!"),
layout = layout_with_graphopt(g) ## note that you can save a randomly-generated layout as a vector so that each time you re-generate the graph it will be the same network.
)
plot(g, vertex.color= "darkorange1", vertex.lable.color= "darkblue", edge.width= .2, edge.lty=1, lable.font.size= 12,vertex.size=12, vertex.frame.color="black", edge.width= 4,layout=layout_with_dh, edge.arrow.size=.2, edge.color="cornflowerblue")
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.siz
e=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.siz
e=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.siz
e=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g,
vertex.color="green",
edge.color="gray",
vertex.label.cex=0.5,
vertex.label.color="black",
vertex.size=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g,
vertex.color="green",
edge.color="gray",
vertex.label.cex=0.5,
vertex.label.color="black",
vertex.size=8,vertex.shape="sphere",edge.arrow.size=1)
plot(g,
vertex.color="green",
edge.color="gray",
vertex.label.cex=0.5,
vertex.label.color="black",
vertex.size=8,vertex.shape="sphere",edge.arrow.size=0.2)
plot.igraph(g, color = "black", width = 3, frame.color = "blue", arrow.size = -100,
arrow.width = -100, rescale = TRUE, main = "Directed Node Chart", rescale = FALSE, asp
= -4, vertex.size = 5, label.color = "green", layout=layout_with_kk)
plot.igraph(g, color = "black", width = 6, frame.color = "blue", arrow.size = -100,
arrow.width = -100, rescale = TRUE, main = "Directed Node Chart", rescale = FALSE, asp
= -4, vertex.size = 5, label.color = "green", layout=layout_with_kk)
plot.igraph(g, color = "black", width = 10, frame.color = "blue", arrow.size = -100,
arrow.width = -100, rescale = TRUE, main = "Directed Node Chart", rescale = FALSE, asp
= -4, vertex.size = 5, label.color = "green", layout=layout_with_kk)
plot.igraph(g, color = "hiet", width = 10, frame.color = "blue", arrow.size = 100,
arrow.width = -100, rescale = TRUE, main = "Directed Node Chart", rescale = FALSE, asp
= -4, vertex.size = 5, label.color = "green", layout=layout_with_kk)
plot.igraph(g, color = "black", width = 10, frame.color = "blue", arrow.size = 2,
arrow.width = 2, main = "Directed Node Chart", asp
= 4, vertex.size = 5, label.color = "green", layout=layout_with_kk)
plot.igraph(g, color = "black", width = 10, frame.color = "blue", arrow.size = 2,
arrow.width = 2, main = "Directed Node Chart", vertex.size = 5, label.color = "green", layout=layout_with_kk)
plot.igraph(g, color = "black", width = 3, frame.color = "blue", arrow.size = -100,
arrow.width = -100, rescale = TRUE, main = "Directed Node Chart", rescale = FALSE, asp
= -4, vertex.size = 5, label.color = "green", layout=layout_with_kk)
plot.igraph(g, color = "black", width = 3, frame.color = "blue", arrow.size = -100,
arrow.width = -100, rescale = TRUE, main = "Directed Node Chart", rescale = FALSE, asp
= -4, vertex.size = 10, label.color = "green", layout=layout_with_kk)
plot.igraph(g, color = "black", width = 10, frame.color = "blue", arrow.size = -100,
arrow.width = -100, rescale = TRUE, main = "Directed Node Chart", rescale = FALSE, asp
= -4, vertex.size = 10, label.color = "green", layout=layout_with_kk)
plot.igraph(g, color = "black", width = 10, frame.color = "white", arrow.size = -100,
arrow.width = -100, rescale = TRUE, main = "Directed Node Chart", rescale = FALSE, asp
= -4, vertex.size = 10, label.color = "green", layout=layout_with_kk)
plot(g, vertex.color="turquoise", edge.color="gray29", edge.width=1.5, vertex.label.cex=0.8,
vertex.label.color="darkblue", vertex.frame.color="darkblue", vertex.size=9, edge.arrow.size=.3,
vertec.shape="sphere", edge.lty=6) #plotting and aesthetics
plot(g, vertex.color="turquoise", edge.color="gray29", edge.width=1.5, vertex.label.cex=0.8,
vertex.label.color="darkblue", vertex.frame.color="darkblue", vertex.size=9, edge.arrow.size=.3,
vertec.shape="sphere", edge.lty=6) #plotting and aesthetics
plot(g, vertex.color="turquoise", edge.color="gray29", edge.width=1.5, vertex.label.cex=0.8,
vertex.label.color="darkblue", vertex.frame.color="darkblue", vertex.size=9, edge.arrow.size=.3,
vertex.shape="sphere", edge.lty=6, layout=layout_with_lgl()) #plotting and aesthetics
plot(g, vertex.color="turquoise", edge.color="gray29", edge.width=1.5, vertex.label.cex=0.8,
vertex.label.color="darkblue", vertex.frame.color="darkblue", vertex.size=9, edge.arrow.size=.3,
vertex.shape="sphere", edge.lty=6, layout=layout_with_lgl #plotting and aesthetics
plot(g, vertex.color="turquoise", edge.color="gray29", edge.width=1.5, vertex.label.cex=0.8,
vertex.label.color="darkblue", vertex.frame.color="darkblue", vertex.size=9, edge.arrow.size=.3,
vertex.shape="sphere", edge.lty=6, layout=layout_with_lgl)
plot(g, vertex.color= "orange", vertex.lable.color= "black", edge.width=.2, edge.lty=1, lable.font.size= 12, vertex.size= 12, vertex.frame.color= "black", edge.width= 4, edg.color= "grey", layout= layout_with_dh, edge.arrow.size= .2, edge.color= "blue")
plot(g, vertex.size=7,vertex.color="navyblue", vertex.label.color="white",
edge.color="indianred", vertex.shape="crectangle", vertex.frame.color="dimgrey", margin=-.5,
label.cex=3)
plot(g, vertex.size=7,vertex.color="navyblue", vertex.label.color="white",
edge.color="indianred", vertex.shape="crectangle", vertex.frame.color="dimgrey")
plot(g, vertex.color = 1:7 , vertex.label.color="white", vertex.label.size= 2,edge.width=.2,
edge.lty=1, fontsize= 2, vertex.size=11, vertex.frame.color="blue",
vertex.shape="sphere",label.fontsize= 2,edge.width=4, edge.color="grey", edge.curved=0,
layout=layout.graphopt, edge.lty=.5, edge.arrow.size=.1)
plot(g, vertex.color = 1:7 , vertex.label.color="white", vertex.label.size= 5,edge.width=.2,
edge.lty=1, fontsize= 2, vertex.size=11, vertex.frame.color="blue",
vertex.shape="sphere",label.fontsize= 2,edge.width=4, edge.color="grey", edge.curved=0,
layout=layout.graphopt, edge.lty=.5, edge.arrow.size=.1)
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "black", main= "Network Graph" )
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "black", main= "Network Graph", layout=layout_nicely)
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 5,
vertex.label.color= "black", main= "Network Graph", layout=layout_nicely)
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 5,
vertex.label.color= "black", main= "Network Graph", layout=layout_nicely)
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "black", main= "Network Graph", layout=layout_nicely)
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "black", main= "Network Graph", layout=layout_with_dh)
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "black", main= "Network Graph", layout=layout_with_lgl
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "black", main= "Network Graph", layout=layout_with_lgl)
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "black", main= "Network Graph")
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "black", main= "Network Graph")
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.siz
e=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.size=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.size=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.size=8,vertex.shape="sphere",edge.arrow.size=.5)
install.packages("igraph")
install.packages("igraph")
library(igraph)
plot(g,vertex.color="green",edge.color="gray",vertex.label.cex=0.5,vertex.label.color="black",vertex.size=8,vertex.shape="sphere",edge.arrow.size=.5)
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "black", main= "Network Graph" )
white
plot(g, edge.color= "seashell4", vertex.color = c("tomato3", "skyblue4","skyblue"), vertex.size= 10,
vertex.label.color= "white", main= "Network Graph" )
plot.igraph(g, node.size = 10, color = "orange", frame.color = "blue", shape =
"circle")
plot.igraph(g, node.size = 10, color = "blue", frame.color = "blue", shape =
"circle")
plot.igraph(g, node.size = 10, color = "blue", frame.color = "white", shape =
"circle")
plot.igraph(g, node.size = 2, color = "blue", frame.color = "white", shape =
"circle")
install.packages("igraph")
