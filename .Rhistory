alpha <- 0.65 ## function of the fertility rate, 0.99 for MTN 3% growth rate, 0.42 for WLG,
###############################################################################
################################## RUN THE IBM ################################
###############################################################################
res <- matrix(0, nrow=trunc(nyears/timeunit)+1, ncol=nruns)
for(j in 1:length(initalConditions)){
for(i in 1:nruns){
print(i)
abmDataLog <- simTshia(ages0 = initalConditions[[j]][,1], status0 = initalConditions[[j]][,2], time0 = initalConditions[[j]][,3], nyears=nyears, alpha=alpha, timeunit=timeunit, verbose=F)
nindiv <- tapply(abmDataLog$status,abmDataLog$timestep, function(v) length(v)+rbinom(1, sum(v=="L"), .5))##we're adding the unweaned females
res[1:length(nindiv),i] <- nindiv
}
write.csv(res, file=paste0(workingDir,"pva_IBM_50year/Scenario", j,".csv"), row.names=F)
}
nyears <- 20
timeunit <- 1/12
nruns <-1
alpha <- 0.85 ## alpha = 0.42 for WLG
res <- data.frame(Year=numeric(0), nyears=numeric(0), nInf = numeric(0))
for(i in 1:nruns){
abmDataLog <- simTshia(ages0 = rep(10, 100), status0 =rep(c("C", "L"), c(20, 80)) , time0 = 0, nyears=nyears, alpha=alpha, timeunit=timeunit, verbose=T)
abmDataLog2 <- abmDataLog[abmDataLog$ages>=10,]
for (j in unique(abmDataLog2$indiv)){
temp <- abmDataLog2[abmDataLog2$indiv==j & abmDataLog2$timestep>(10/timeunit),"status"]
nInf <- sum(((temp=="L")[-1]-(temp=="L")[-length(temp)])==1)
nYearObs <- length(temp)*timeunit
res <- rbind(res, data.frame(nyears= nYearObs, nInf = nInf))
}
}
apply(res, 2, sum)[2]/apply(res, 2, sum)[1]
View(res)
apply(res, 2, sum)[2]
nyears <- 20
timeunit <- 1/12
nruns <-1
alpha <- 0.42 ## alpha = 0.42 for WLG
res <- data.frame(Year=numeric(0), nyears=numeric(0), nInf = numeric(0))
for(i in 1:nruns){
abmDataLog <- simTshia(ages0 = rep(10, 100), status0 =rep(c("C", "L"), c(20, 80)) , time0 = 0, nyears=nyears, alpha=alpha, timeunit=timeunit, verbose=T)
abmDataLog2 <- abmDataLog[abmDataLog$ages>=10,]
for (j in unique(abmDataLog2$indiv)){
temp <- abmDataLog2[abmDataLog2$indiv==j & abmDataLog2$timestep>(10/timeunit),"status"]
nInf <- sum(((temp=="L")[-1]-(temp=="L")[-length(temp)])==1)
nYearObs <- length(temp)*timeunit
res <- rbind(res, data.frame(nyears= nYearObs, nInf = nInf))
}
}
apply(res, 2, sum)[2]/apply(res, 2, sum)[1]
nyears <- 20
timeunit <- 1/12
nruns <-1
alpha <- 0.99 ## alpha = 0.42 for WLG
res <- data.frame(Year=numeric(0), nyears=numeric(0), nInf = numeric(0))
for(i in 1:nruns){
abmDataLog <- simTshia(ages0 = rep(10, 100), status0 =rep(c("C", "L"), c(20, 80)) , time0 = 0, nyears=nyears, alpha=alpha, timeunit=timeunit, verbose=T)
abmDataLog2 <- abmDataLog[abmDataLog$ages>=10,]
for (j in unique(abmDataLog2$indiv)){
temp <- abmDataLog2[abmDataLog2$indiv==j & abmDataLog2$timestep>(10/timeunit),"status"]
nInf <- sum(((temp=="L")[-1]-(temp=="L")[-length(temp)])==1)
nYearObs <- length(temp)*timeunit
res <- rbind(res, data.frame(nyears= nYearObs, nInf = nInf))
}
}
apply(res, 2, sum)[2]/apply(res, 2, sum)[1]
View(res)
nyears <- 20
timeunit <- 1/12
nruns <-1
alpha <- 0.99 ## alpha = 0.42 for WLG
res <- data.frame(Year=numeric(0), nyears=numeric(0), nInf = numeric(0))
for(i in 1:nruns){
abmDataLog <- simTshia(ages0 = rep(10, 100), status0 =rep(c("C", "L"), c(20, 80)) , time0 = 0, nyears=nyears, alpha=alpha, timeunit=timeunit, verbose=T)
abmDataLog2 <- abmDataLog[abmDataLog$ages>=8,]
for (j in unique(abmDataLog2$indiv)){
temp <- abmDataLog2[abmDataLog2$indiv==j & abmDataLog2$timestep>(10/timeunit),"status"]
nInf <- sum(((temp=="L")[-1]-(temp=="L")[-length(temp)])==1)
nYearObs <- length(temp)*timeunit
res <- rbind(res, data.frame(nyears= nYearObs, nInf = nInf))
}
}
apply(res, 2, sum)[2]
apply(res, 2, sum)[1]
apply(res, 2, sum)[2]/apply(res, 2, sum)[1]
rep(10, 100)
## Select the correct folder for either WLG or MTN data
workingDir_IBM <- "~/Box Sync/PVA_Paper/PVA_Tshiaberimu_R/pva_ABM_50year_Breuer_wlg/"
res <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario1.csv")))
finalPopSizes <- res[nrow(res),]
res0 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario2.csv")))
finalPopSizes0 <- res0[nrow(res0),]
res1 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario3.csv")))
finalPopSizes1 <- res1[nrow(res1),]
res2 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario4.csv")))
finalPopSizes2 <- res2[nrow(res2),]
res3 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario5.csv")))
finalPopSizes3 <- res3[nrow(res3),]
res4 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario6.csv")))
finalPopSizes4 <- res4[nrow(res4),]
res5 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario7.csv")))
finalPopSizes5 <- res5[nrow(res5),]
res6 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario8.csv")))
finalPopSizes6 <- res6[nrow(res6),]
res7 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario9.csv")))
finalPopSizes7 <- res7[nrow(res7),]
## what is probability that simulation results in extinction?
## see how many times final population is less than 0 (in last row of temp matrix or in all years of the projection?)
extA <- res[nrow(res),]==0
probExtA <- mean(res[nrow(res),]==0)
## OR probExtA <- length(extA[extA==TRUE])/length(extA)
extB <- res0[nrow(res0),]==0
probExtB <- mean(res0[nrow(res0),]==0)
## OR probExtB <- length(extB[extB==TRUE])/length(extB)
extC <- res1[nrow(res1),]==0
probExtC <- mean(res1[nrow(res1),]==0)
## OR probExtC <- length(extC[extC==TRUE])/length(extC)
extD <- res2[nrow(res2),]==0
probExtD <- mean(res2[nrow(res2),]==0)
## OR probExtD <- length(extD[extD==TRUE])/length(extD)
extE <- res3[nrow(res3),]==0
probExtE <- mean(res3[nrow(res3),]==0)
## OR probExtE <- length(extE[extE==TRUE])/length(extE)
extF <- res4[nrow(res4),]==0
probExtF <- mean(res4[nrow(res4),]==0)
## probExtF <- length(extF[extF==TRUE])/length(extF)
extG <- res5[nrow(res5),]==0
probExtG <- mean(res5[nrow(res5),]==0)
## probExtG <- length(extG[extG==TRUE])/length(extG)
extH <- res6[nrow(res6),]==0
probExtH <- mean(res6[nrow(res6),]==0)
## OR probExtH <- length(extH[extH==TRUE])/length(extH)
extI <- res7[nrow(res7),]==0
probExtI <- mean(res7[nrow(res7),]==0)
## OR probExtI <- length(extI[extI==TRUE])/length(extI)
##############################################################
############## EXAMINE LAMBDA VALUES FOR GROWTH ##############
##############################################################
## Scenario A
logLambda <- (1/50)*log(res[nrow(res),]/res[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda <- exp(logLambda)
lambdaA <- mean(lambda)
## Scenario B
logLambda0 <- (1/50)*log(res0[nrow(res0),]/res0[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda0 <- exp(logLambda0)
lambdaB <- mean(lambda0)
## Scenario C
logLambda1 <- (1/50)*log(res1[nrow(res1),]/res1[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda1 <- exp(logLambda1)
lambdaC <- mean(lambda1)
## Scenario D
logLambda2 <- (1/50)*log(res2[nrow(res2),]/res2[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda2 <- exp(logLambda2)
lambdaD <- mean(lambda2)
## Scenario E
logLambda3 <- (1/50)*log(res3[nrow(res3),]/res3[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda3 <- exp(logLambda3)
lambdaE <- mean(lambda3)
## Scenario F
logLambda4 <- (1/50)*log(res4[nrow(res4),]/res4[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda4 <- exp(logLambda4)
lambdaF <- mean(lambda4)
## Scenario G
logLambda5 <- (1/50)*log(res5[nrow(res5),]/res5[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda5 <- exp(logLambda5)
lambdaG <- mean(lambda5)
## Scenario H
logLambda6 <- (1/50)*log(res6[nrow(res6),]/res6[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda6 <- exp(logLambda6)
lambdaH <- mean(lambda6)
## Scenario I
logLambda7 <- (1/50)*log(res7[nrow(res7),]/res7[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda7 <- exp(logLambda7)
lambdaI <- mean(lambda7)
## let's save these lambda and prob extn values as a data frame and save it as a csv file
lambda_extn_ibm <- data.frame(scenario = as.factor(LETTERS[1:9]), lambda_50years =  c(lambdaA, lambdaB, lambdaC, lambdaD, lambdaE, lambdaF, lambdaG, lambdaH, lambdaI), prob_Extn =  (c(probExtA, probExtB, probExtC, probExtD, probExtE, probExtF, probExtG, probExtH, probExtI)*100))
## Make sure you use the correct LM for WLG or MTN when you run the code
## WLG values
write.csv(lambda_extn_ibm, file="/Users/neethaiyer/Box Sync/PVA_Paper/PVA_Tshiaberimu_R/pva_lambda_extn/lambda_extn_ibm_WLG.csv", row.names=F)
## MTN values
write.csv(lambda_extn_ibm, file="/Users/neethaiyer/Box Sync/PVA_Paper/PVA_Tshiaberimu_R/pva_lambda_extn/lambda_extn_ibm_MTN_0.85.csv", row.names=F)
workingDir_IBM <- "~/Box Sync/PVA_Paper/PVA_Tshiaberimu_R/pva_ABM_50year_mtn_0.85/"
res <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario1.csv")))
finalPopSizes <- res[nrow(res),]
res0 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario2.csv")))
finalPopSizes0 <- res0[nrow(res0),]
res1 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario3.csv")))
finalPopSizes1 <- res1[nrow(res1),]
res2 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario4.csv")))
finalPopSizes2 <- res2[nrow(res2),]
res3 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario5.csv")))
finalPopSizes3 <- res3[nrow(res3),]
res4 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario6.csv")))
finalPopSizes4 <- res4[nrow(res4),]
res5 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario7.csv")))
finalPopSizes5 <- res5[nrow(res5),]
res6 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario8.csv")))
finalPopSizes6 <- res6[nrow(res6),]
res7 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario9.csv")))
finalPopSizes7 <- res7[nrow(res7),]
## what is probability that simulation results in extinction?
## see how many times final population is less than 0 (in last row of temp matrix or in all years of the projection?)
extA <- res[nrow(res),]==0
probExtA <- mean(res[nrow(res),]==0)
## OR probExtA <- length(extA[extA==TRUE])/length(extA)
extB <- res0[nrow(res0),]==0
probExtB <- mean(res0[nrow(res0),]==0)
## OR probExtB <- length(extB[extB==TRUE])/length(extB)
extC <- res1[nrow(res1),]==0
probExtC <- mean(res1[nrow(res1),]==0)
## OR probExtC <- length(extC[extC==TRUE])/length(extC)
extD <- res2[nrow(res2),]==0
probExtD <- mean(res2[nrow(res2),]==0)
## OR probExtD <- length(extD[extD==TRUE])/length(extD)
extE <- res3[nrow(res3),]==0
probExtE <- mean(res3[nrow(res3),]==0)
## OR probExtE <- length(extE[extE==TRUE])/length(extE)
extF <- res4[nrow(res4),]==0
probExtF <- mean(res4[nrow(res4),]==0)
## probExtF <- length(extF[extF==TRUE])/length(extF)
extG <- res5[nrow(res5),]==0
probExtG <- mean(res5[nrow(res5),]==0)
## probExtG <- length(extG[extG==TRUE])/length(extG)
extH <- res6[nrow(res6),]==0
probExtH <- mean(res6[nrow(res6),]==0)
## OR probExtH <- length(extH[extH==TRUE])/length(extH)
extI <- res7[nrow(res7),]==0
probExtI <- mean(res7[nrow(res7),]==0)
## OR probExtI <- length(extI[extI==TRUE])/length(extI)
##############################################################
############## EXAMINE LAMBDA VALUES FOR GROWTH ##############
##############################################################
## Scenario A
logLambda <- (1/50)*log(res[nrow(res),]/res[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda <- exp(logLambda)
lambdaA <- mean(lambda)
## Scenario B
logLambda0 <- (1/50)*log(res0[nrow(res0),]/res0[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda0 <- exp(logLambda0)
lambdaB <- mean(lambda0)
## Scenario C
logLambda1 <- (1/50)*log(res1[nrow(res1),]/res1[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda1 <- exp(logLambda1)
lambdaC <- mean(lambda1)
## Scenario D
logLambda2 <- (1/50)*log(res2[nrow(res2),]/res2[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda2 <- exp(logLambda2)
lambdaD <- mean(lambda2)
## Scenario E
logLambda3 <- (1/50)*log(res3[nrow(res3),]/res3[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda3 <- exp(logLambda3)
lambdaE <- mean(lambda3)
## Scenario F
logLambda4 <- (1/50)*log(res4[nrow(res4),]/res4[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda4 <- exp(logLambda4)
lambdaF <- mean(lambda4)
## Scenario G
logLambda5 <- (1/50)*log(res5[nrow(res5),]/res5[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda5 <- exp(logLambda5)
lambdaG <- mean(lambda5)
## Scenario H
logLambda6 <- (1/50)*log(res6[nrow(res6),]/res6[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda6 <- exp(logLambda6)
lambdaH <- mean(lambda6)
## Scenario I
logLambda7 <- (1/50)*log(res7[nrow(res7),]/res7[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda7 <- exp(logLambda7)
lambdaI <- mean(lambda7)
## let's save these lambda and prob extn values as a data frame and save it as a csv file
lambda_extn_ibm <- data.frame(scenario = as.factor(LETTERS[1:9]), lambda_50years =  c(lambdaA, lambdaB, lambdaC, lambdaD, lambdaE, lambdaF, lambdaG, lambdaH, lambdaI), prob_Extn =  (c(probExtA, probExtB, probExtC, probExtD, probExtE, probExtF, probExtG, probExtH, probExtI)*100))
## MTN values
write.csv(lambda_extn_ibm, file="/Users/neethaiyer/Box Sync/PVA_Paper/PVA_Tshiaberimu_R/pva_lambda_extn/lambda_extn_ibm_MTN_0.85.csv", row.names=F)
## Select the correct folder for either WLG or MTN data
workingDir_IBM <- "~/Box Sync/PVA_Paper/PVA_Tshiaberimu_R/pva_ABM_50year_Breuer_wlg/"
res <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario1.csv")))
finalPopSizes <- res[nrow(res),]
res0 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario2.csv")))
finalPopSizes0 <- res0[nrow(res0),]
res1 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario3.csv")))
finalPopSizes1 <- res1[nrow(res1),]
res2 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario4.csv")))
finalPopSizes2 <- res2[nrow(res2),]
res3 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario5.csv")))
finalPopSizes3 <- res3[nrow(res3),]
res4 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario6.csv")))
finalPopSizes4 <- res4[nrow(res4),]
res5 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario7.csv")))
finalPopSizes5 <- res5[nrow(res5),]
res6 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario8.csv")))
finalPopSizes6 <- res6[nrow(res6),]
res7 <- as.matrix(read.csv(paste0(workingDir_IBM, "Scenario9.csv")))
finalPopSizes7 <- res7[nrow(res7),]
## what is probability that simulation results in extinction?
## see how many times final population is less than 0 (in last row of temp matrix or in all years of the projection?)
extA <- res[nrow(res),]==0
probExtA <- mean(res[nrow(res),]==0)
## OR probExtA <- length(extA[extA==TRUE])/length(extA)
extB <- res0[nrow(res0),]==0
probExtB <- mean(res0[nrow(res0),]==0)
## OR probExtB <- length(extB[extB==TRUE])/length(extB)
extC <- res1[nrow(res1),]==0
probExtC <- mean(res1[nrow(res1),]==0)
## OR probExtC <- length(extC[extC==TRUE])/length(extC)
extD <- res2[nrow(res2),]==0
probExtD <- mean(res2[nrow(res2),]==0)
## OR probExtD <- length(extD[extD==TRUE])/length(extD)
extE <- res3[nrow(res3),]==0
probExtE <- mean(res3[nrow(res3),]==0)
## OR probExtE <- length(extE[extE==TRUE])/length(extE)
extF <- res4[nrow(res4),]==0
probExtF <- mean(res4[nrow(res4),]==0)
## probExtF <- length(extF[extF==TRUE])/length(extF)
extG <- res5[nrow(res5),]==0
probExtG <- mean(res5[nrow(res5),]==0)
## probExtG <- length(extG[extG==TRUE])/length(extG)
extH <- res6[nrow(res6),]==0
probExtH <- mean(res6[nrow(res6),]==0)
## OR probExtH <- length(extH[extH==TRUE])/length(extH)
extI <- res7[nrow(res7),]==0
probExtI <- mean(res7[nrow(res7),]==0)
## OR probExtI <- length(extI[extI==TRUE])/length(extI)
##############################################################
############## EXAMINE LAMBDA VALUES FOR GROWTH ##############
##############################################################
## Scenario A
logLambda <- (1/50)*log(res[nrow(res),]/res[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda <- exp(logLambda)
lambdaA <- mean(lambda)
## Scenario B
logLambda0 <- (1/50)*log(res0[nrow(res0),]/res0[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda0 <- exp(logLambda0)
lambdaB <- mean(lambda0)
## Scenario C
logLambda1 <- (1/50)*log(res1[nrow(res1),]/res1[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda1 <- exp(logLambda1)
lambdaC <- mean(lambda1)
## Scenario D
logLambda2 <- (1/50)*log(res2[nrow(res2),]/res2[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda2 <- exp(logLambda2)
lambdaD <- mean(lambda2)
## Scenario E
logLambda3 <- (1/50)*log(res3[nrow(res3),]/res3[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda3 <- exp(logLambda3)
lambdaE <- mean(lambda3)
## Scenario F
logLambda4 <- (1/50)*log(res4[nrow(res4),]/res4[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda4 <- exp(logLambda4)
lambdaF <- mean(lambda4)
## Scenario G
logLambda5 <- (1/50)*log(res5[nrow(res5),]/res5[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda5 <- exp(logLambda5)
lambdaG <- mean(lambda5)
## Scenario H
logLambda6 <- (1/50)*log(res6[nrow(res6),]/res6[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda6 <- exp(logLambda6)
lambdaH <- mean(lambda6)
## Scenario I
logLambda7 <- (1/50)*log(res7[nrow(res7),]/res7[1,]) ## 50 years for the projected time period, lambda = 1/timeperiod*log(Ntfinal)/Nt0
lambda7 <- exp(logLambda7)
lambdaI <- mean(lambda7)
## let's save these lambda and prob extn values as a data frame and save it as a csv file
lambda_extn_ibm <- data.frame(scenario = as.factor(LETTERS[1:9]), lambda_50years =  c(lambdaA, lambdaB, lambdaC, lambdaD, lambdaE, lambdaF, lambdaG, lambdaH, lambdaI), prob_Extn =  (c(probExtA, probExtB, probExtC, probExtD, probExtE, probExtF, probExtG, probExtH, probExtI)*100))
timeunit <- 1/12
#################################################
############## PLOT FOR Scenario A ##############
#################################################
par(mfrow=c(3,3))
plot((0:(nrow(res)-1))*timeunit, apply(res, 1, mean), type="l", col=2, lwd=2, xlab="Years post-introduction", ylab="Population size", font.lab=2, bty="l", ylim=c(0,120))
for(i in 1:ncol(res)){
lines((0:(nrow(res)-1))*timeunit, res[,i], col=grey(.9))
}
## add mean trend
lines((0:(nrow(res)-1))*timeunit, apply(res, 1, mean), type="l", col=2, lwd=3)
## add 95% upper/lower limits
qtiles <- apply(res, 1, function(v) quantile(v, probs=c(0.05, 0.95)))
lines((0:(nrow(res)-1))*timeunit, qtiles[1,], lty=2)
lines((0:(nrow(res)-1))*timeunit, qtiles[2,], lty=2)
## add some graph fluff
title(main="A: No introduction, male juvenile", sub=paste0("Probability of extinction = ", round(probExtA, 3)*100, "%"), cex.main=1, cex.sub=1, col.sub=1,  font.sub=3)
## add a line for the 50 individual mark
lines(x=c(-5:50), y=rep(50, 56), col="navy", lwd=2, lty=1)
plot((0:(nrow(res0)-1))*timeunit, apply(res0, 1, mean), type="l", col=2, lwd=2, xlab="Years post-introduction", ylab="Population size", font.lab=2, bty="l", ylim=c(0,120))
for(i in 1:ncol(res0)){
lines((0:(nrow(res0)-1))*timeunit, res0[,i], col=grey(.9))
}
## add mean trend
lines((0:(nrow(res0)-1))*timeunit, apply(res0, 1, mean), type="l", col=2, lwd=3)
## add 95% upper/lower limits
qtiles <- apply(res0, 1, function(v) quantile(v, probs=c(0.05, 0.95)))
lines((0:(nrow(res0)-1))*timeunit, qtiles[1,], lty=2)
lines((0:(nrow(res0)-1))*timeunit, qtiles[2,], lty=2)
## add some graph fluff
title(main="B: No introduction, female juvenile", sub=paste0("Probability of extinction = ", round(probExtB, 3)*100, "%"), cex.main=1, cex.sub=1, col.sub=1,  font.sub=3)
## add a line for the 50 individual mark
lines(x=c(-5:50), y=rep(50, 56), col="navy", lwd=2, lty=1)
#################################################
############## PLOT FOR Scenario C ##############
#################################################
plot((0:(nrow(res1)-1))*timeunit, apply(res1, 1, mean), type="l", col=2, lwd=2, xlab="Years post-introduction", ylab="Population size", font.lab=2, bty="l", ylim=c(0,120))
for(i in 1:ncol(res1)){
lines((0:(nrow(res1)-1))*timeunit, res1[,i], col=grey(.9))
}
## add mean trend
lines((0:(nrow(res1)-1))*timeunit, apply(res1, 1, mean), type="l", col=2, lwd=3)
## add 95% upper/lower limits
qtiles <- apply(res1, 1, function(v) quantile(v, probs=c(0.05, 0.95)))
lines((0:(nrow(res1)-1))*timeunit, qtiles[1,], lty=2)
lines((0:(nrow(res1)-1))*timeunit, qtiles[2,], lty=2)
## add some graph fluff
title(main="C: 2 females introduced", sub=paste0("Probability of extinction = ", round(probExtC, 3)*100, "%"), cex.main=1, cex.sub=1, col.sub=1,  font.sub=3)
## add a line for the 50 individual mark
lines(x=c(-5:50), y=rep(50, 56), col="navy", lwd=2, lty=1)
#################################################
############## PLOT FOR Scenario D ##############
#################################################
plot((0:(nrow(res2)-1))*timeunit, apply(res2, 1, mean), type="l", col=2, lwd=2, xlab="Years post-introduction", ylab="Population size", bty="l", ylim=c(0,120))
for(i in 1:ncol(res2)){
lines((0:(nrow(res2)-1))*timeunit, res2[,i], col=grey(.9))
}
## add mean trend
lines((0:(nrow(res2)-1))*timeunit, apply(res2, 1, mean), type="l", col=2, lwd=3)
## add 95% upper/lower limits
qtiles <- apply(res2, 1, function(v) quantile(v, probs=c(0.05, 0.95)))
lines((0:(nrow(res2)-1))*timeunit, qtiles[1,], lty=2)
lines((0:(nrow(res2)-1))*timeunit, qtiles[2,], lty=2)
## add some graph fluff
title(main="D: 3 females introduced", sub=paste0("Probability of extinction = ", round(probExtD, 3)*100, "%"), cex.main=1, cex.sub=1, col.sub=1,  font.sub=3)
## add a line for the 50 individual mark
lines(x=c(-5:50), y=rep(50, 56), col="navy", lwd=2, lty=1)
#################################################
############## PLOT FOR Scenario E ##############
#################################################
plot((0:(nrow(res3)-1))*timeunit, apply(res3, 1, mean), type="l", col=2, lwd=2, xlab="Years post-introduction", ylab="Population size", bty="l", ylim=c(0,120))
for(i in 1:ncol(res3)){
lines((0:(nrow(res3)-1))*timeunit, res3[,i], col=grey(.9))
}
## add mean trend
lines((0:(nrow(res3)-1))*timeunit, apply(res3, 1, mean), type="l", col=2, lwd=3)
## add 95% upper/lower limits
qtiles <- apply(res3, 1, function(v) quantile(v, probs=c(0.05, 0.95)))
lines((0:(nrow(res3)-1))*timeunit, qtiles[1,], lty=2)
lines((0:(nrow(res3)-1))*timeunit, qtiles[2,], lty=2)
## add some graph fluff
title(main="E: 4 females introduced", sub=paste0("Probability of extinction = ", round(probExtE, 3)*100, "%"), cex.main=1, cex.sub=1, col.sub=1,  font.sub=3)
## add a line for the 50 individual mark
lines(x=c(-5:50), y=rep(50, 56), col="navy", lwd=2, lty=1)
#################################################
############## PLOT FOR Scenario F ##############
#################################################
plot((0:(nrow(res4)-1))*timeunit, apply(res4, 1, mean), type="l", col=2, lwd=2, xlab="Years post-introduction", ylab="Population size", bty="l", ylim=c(0,120))
for(i in 1:ncol(res4)){
lines((0:(nrow(res4)-1))*timeunit, res4[,i], col=grey(.9))
}
## add mean trend
lines((0:(nrow(res4)-1))*timeunit, apply(res4, 1, mean), type="l", col=2, lwd=3)
## add 95% upper/lower limits
qtiles <- apply(res4, 1, function(v) quantile(v, probs=c(0.05, 0.95)))
lines((0:(nrow(res4)-1))*timeunit, qtiles[1,], lty=2)
lines((0:(nrow(res4)-1))*timeunit, qtiles[2,], lty=2)
## add some graph fluff
title(main="F: 5 females introduced", sub=paste0("Probability of extinction = ", round(probExtF, 3)*100, "%"), cex.main=1, cex.sub=1, col.sub=1,  font.sub=3)
## add a line for the 50 individual mark
lines(x=c(-5:50), y=rep(50, 56), col="navy", lwd=2, lty=1)
#################################################
############## PLOT FOR Scenario G ##############
#################################################
plot((0:(nrow(res5)-1))*timeunit, apply(res5, 1, mean), type="l", col=2, lwd=2, xlab="Years post-introduction", ylab="Population size", bty="l", ylim=c(0,120))
for(i in 1:ncol(res5)){
lines((0:(nrow(res5)-1))*timeunit, res5[,i], col=grey(.9))
}
## add mean trend
lines((0:(nrow(res5)-1))*timeunit, apply(res5, 1, mean), type="l", col=2, lwd=3)
## add 95% upper/lower limits
qtiles <- apply(res5, 1, function(v) quantile(v, probs=c(0.05, 0.95)))
lines((0:(nrow(res5)-1))*timeunit, qtiles[1,], lty=2)
lines((0:(nrow(res5)-1))*timeunit, qtiles[2,], lty=2)
## add some graph fluff
title(main="G: 6 females introduced", sub=paste0("Probability of extinction = ", round(probExtG, 3)*100, "%"), cex.main=1, cex.sub=1, col.sub=1,  font.sub=3)
## add a line for the 50 individual mark
lines(x=c(-5:50), y=rep(50, 56), col="navy", lwd=2, lty=1)
#################################################
############## PLOT FOR Scenario H ##############
#################################################
plot((0:(nrow(res6)-1))*timeunit, apply(res6, 1, mean), type="l", col=2, lwd=2, xlab="Years post-introduction", ylab="Population size", bty="l", ylim=c(0,120))
for(i in 1:ncol(res6)){
lines((0:(nrow(res6)-1))*timeunit, res6[,i], col=grey(.9))
}
## add mean trend
lines((0:(nrow(res6)-1))*timeunit, apply(res6, 1, mean), type="l", col=2, lwd=3)
## add 95% upper/lower limits
qtiles <- apply(res6, 1, function(v) quantile(v, probs=c(0.05, 0.95)))
lines((0:(nrow(res6)-1))*timeunit, qtiles[1,], lty=2)
lines((0:(nrow(res6)-1))*timeunit, qtiles[2,], lty=2)
## add some graph fluff
title(main="H: 7 females introduced", sub=paste0("Probability of extinction = ", round(probExtH, 3)*100, "%"), cex.main=1, cex.sub=1, col.sub=1,  font.sub=3)
## add a line for the 50 individual mark
lines(x=c(-5:50), y=rep(50, 56), col="navy", lwd=2, lty=1)
#################################################
############## PLOT FOR Scenario I ##############
#################################################
plot((0:(nrow(res7)-1))*timeunit, apply(res7, 1, mean), type="l", col=2, lwd=2, xlab="Years post-introduction", ylab="Population size", bty="l", ylim=c(0,120))
for(i in 1:ncol(res7)){
lines((0:(nrow(res7)-1))*timeunit, res7[,i], col=grey(.9))
}
## add mean trend
lines((0:(nrow(res7)-1))*timeunit, apply(res7, 1, mean), type="l", col=2, lwd=3)
## add 95% upper/lower limits
qtiles <- apply(res7, 1, function(v) quantile(v, probs=c(0.05, 0.95)))
lines((0:(nrow(res7)-1))*timeunit, qtiles[1,], lty=2)
lines((0:(nrow(res7)-1))*timeunit, qtiles[2,], lty=2)
## add some graph fluff
title(main="I: 8 females introduced", sub=paste0("Probability of extinction = ", round(probExtI, 3)*100, "%"), cex.main=1, cex.sub=1, col.sub=1,  font.sub=3)
## add a line for the 50 individual mark
lines(x=c(-5:50), y=rep(50, 56), col="navy", lwd=2, lty=1)
